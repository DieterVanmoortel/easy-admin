<?php


/**
 * TODO's
 * 
 * - use sprites for the images
 * - switch to ajax for backend actions
 * - smoother jquery
 * - develop some cool navigation system in jquery
 * - add spin.min.js
 * 
 */

/*
 * Implementing hook_permission
 */
function easy_admin_permission(){
   return array(
    'use easy admin' => array(    // use the admin tabs
      'title' => t('Use Easy Admin Tools'), 
      'description' => t('Use the easy admin UI.'),
    ),
    'configure easy admin' => array( // confiture the admin tabs
      'title' => t('Configure Easy Admin Tools'), 
      'description' => t('Change settings for the easy admin tabs.'),
    ),
  );
}

/*
 *  Implementing hook_menu
 */
function easy_admin_menu(){
  $items = array();
//  $items['admin/easy_admin/%'] = array(
//    'page callback' => 'easy_admin_actions',
//    'page arguments' => array(2),
//    'access arguments' => array('use easy admin'),
//    'type' => MENU_CALLBACK,
//  );
  $items['admin/config/easy_admin/'] = array(
    'title' => t('Easy Admin tabs'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('easy_admin_settings_form'),
    'access arguments' => array('configure easy admin'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}
/*
 * Implementation of hook_block_info
 */
function easy_admin_block_info() {
  $blocks = array();
  
  $blocks['easy_admin'] = array(
    'info' => t('Easy Admin tabs'), 
  );
  
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function easy_admin_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'easy_admin':
      $block['content'] = easy_admin_block_render();
      break;
  }
  return $block;
}


/*
 * The content of the easy admin block
 */
function easy_admin_block_render(){
  $output = '';
  // Primary tabs
  $primary = menu_primary_local_tasks();
  if(is_array($primary)) {
    $output .= '<div class="tabs easy_admin primary"><ul class="tabs primary">';
    $output .= drupal_render($primary);
    $output .= '</ul></div>';
  }
    
  $navitems = easy_admin_default_navigation();
  $navlist = theme('item_list', array('items' => $navitems));
  $output .= '<div class="tabs easy_admin nav">';
  $output .= $navlist;
  $output .= '</div>';
  
  $default_functions = easy_admin_default_functions();
  $functions = theme('item_list', array('items' => $default_functions));
  $output .= '<div class="tabs easy_admin tools"><span class="icon"></span>';
  $output .= $functions;
  $output .= '</div>';
  
  return $output;
}




function easy_admin_default_functions(){
  $actions = array();
  $actions['flush_caches'] =  array(t('Flush Caches'));
  $actions['rebuild_menu'] = array(t('Rebuild Menu'));
  $actions['cron'] =  array(t('Run Cron'));
  $actions['dblog'] =  array(t('View Reports'));
  
  foreach($actions as $callback => $action) {
    $items[] = l($action[0], 'admin/easy_admin/'.$callback);
  }
  return $items;
}


function easy_admin_default_navigation(){
  $functions = array();
  $functions['content'] =  array(t('Content'));
  $functions['config'] =  array(t('Configuration'));
  $functions['structure'] =  array(t('Structure'));
  $functions['people'] =  array(t('Users'));
//  $functions['appearance'] =  array(t('Themes'));
          
  foreach($functions as $callback => $function) {
    $items[] = l($function[0], 'admin/'.$callback);
  }
  return $items;
}

/**
 * Frequently used actions
 * @param type $action 
 */
function easy_admin_actions($action){
  switch($action){
    case 'rebuild_menu':
      if(menu_rebuild()){drupal_set_message(t('Menu was reconstructed.'));}
      break;
    case 'flush_caches':
      drupal_flush_all_caches();
      drupal_set_message(t('All caches flushed.'));
      break;
    case 'cron':
      if(drupal_cron_run()){drupal_set_message(t('Cron run succesfull.'));}
      break;
    case 'update':
      drupal_goto('update.php');
      break;
    case 'dblog':
      drupal_goto('admin/reports/dblog');
      break;
  }
  drupal_goto('<front>');
}


function easy_admin_settings_form(&$form, &$form_state) {
  $form = array();
  $form['actions'] = array(
      '#type' => 'checkboxes',
      '#title' => t('Show actions'),
      '#options' => array(1,2,3,),
  );
  return $form;
}